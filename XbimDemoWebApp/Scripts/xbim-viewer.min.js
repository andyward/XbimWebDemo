

/* Copyright (c) 2014, xBIM Team, Northumbria University. All rights reserved.

This javascript library is part of xBIM project. It is provided under the same 
Common Development and Distribution License (CDDL) as the xBIM Toolkit. For 
more information see http://www.openbim.org

Redistribution and use in source and binary forms, with or without modification,
are permitted provided that the following conditions are met:

  * Redistributions of source code must retain the above copyright notice, this
    list of conditions and the following disclaimer.
  * Redistributions in binary form must reproduce the above copyright notice,
    this list of conditions and the following disclaimer in the documentation
    and/or other materials provided with the distribution.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. */

function xBinaryReader(){this._buffer=null;this._position=0;}
xBinaryReader.prototype.onloaded=function(){};xBinaryReader.prototype.onerror=function(){};xBinaryReader.prototype.load=function(source){this._position=0;var self=this;if(typeof(source)=='undefined'||source==null)throw'Source must be defined';if(typeof(source)=='string'){var xhr;xhr=new XMLHttpRequest();xhr.open("GET",source,true);xhr.onreadystatechange=function(){if(xhr.readyState==4&&xhr.status==200){var fReader=new FileReader();fReader.onloadend=function(){if(fReader.result){self._buffer=fReader.result;if(self.onloaded){self.onloaded();}}};fReader.readAsArrayBuffer(xhr.response);}
if(xhr.readyState==4&&xhr.status!=200){var msg='Failed to fetch binary data from server. Server code: '+xhr.status+'. This might be due to CORS policy of your browser if you run this as a local file.';if(self.onerror)self.onerror(msg);throw msg;}};xhr.responseType='blob';xhr.send();}
else if(source instanceof Blob||source instanceof File){var fReader=new FileReader();fReader.onloadend=function(){if(fReader.result){self._buffer=fReader.result;if(self.onloaded){self.onloaded();}}};fReader.readAsArrayBuffer(source);}
else if(source instanceof ArrayBuffer){this._buffer=source;}};xBinaryReader.prototype.getIsEOF=function(type,count){return this._position==this._buffer.byteLength;};xBinaryReader.prototype.read=function(arity,count,ctor){if(typeof(count)==="undefined")count=1;var length=arity*count;var offset=this._position;this._position+=length;var result;if(offset%arity===0){result=new ctor(this._buffer,offset,count);}else{result=new ctor(this._buffer.slice(offset,offset+length));}
return count===1?result[0]:result;};xBinaryReader.prototype.readByte=function(count){return this.read(1,count,Uint8Array);};xBinaryReader.prototype.readUint8=function(count){return this.read(1,count,Uint8Array);};xBinaryReader.prototype.readInt16=function(count){return this.read(2,count,Int16Array);};xBinaryReader.prototype.readUint16=function(count){return this.read(2,count,Uint16Array);};xBinaryReader.prototype.readInt32=function(count){return this.read(4,count,Int32Array);};xBinaryReader.prototype.readUint32=function(count){return this.read(4,count,Uint32Array);};xBinaryReader.prototype.readFloat32=function(count){return this.read(4,count,Float32Array);};xBinaryReader.prototype.readFloat64=function(count){return this.read(8,count,Float64Array);};xBinaryReader.prototype.readChar=function(count){if(typeof(count)==="undefined")count=1;var bytes=this.readByte(count);var result=new Array(count);for(var i in bytes){result[i]=String.fromCharCode(bytes[i]);}
return count===1?result[0]:result;};xBinaryReader.prototype.readPoint=function(count){if(typeof(count)==="undefined")count=1;var coords=this.readFloat32(count*3);var result=new Array(count);for(var i=0;i<count;i++){var offset=i*3*4;var point=new Float32Array(coords.buffer,offset,3);result[i]=point;}
return count===1?result[0]:result;};xBinaryReader.prototype.readRgba=function(count){if(typeof(count)==="undefined")count=1;var values=this.readByte(count*4);var result=new Array(count);for(var i=0;i<count;i++){var offset=i*4;var colour=new Uint8Array(values.buffer,offset,4);result[i]=colour;}
return count===1?result[0]:result;};xBinaryReader.prototype.readPackedNormal=function(count){if(typeof(count)==="undefined")count=1;var values=this.readUint8(count*2);var result=new Array(count);for(var i=0;i<count;i++){var uv=new Uint8Array(values.buffer,i*2,2);result[i]=uv;}
return count===1?result[0]:result;};xBinaryReader.prototype.readMatrix4x4=function(count){if(typeof(count)==="undefined")count=1;var values=this.readFloat32(count*16);var result=new Array(count);for(var i=0;i<count;i++){var offset=i*16*4;var matrix=new Float32Array(values.buffer,offset,16);result[i]=matrix;}
return count===1?result[0]:result;};function xModelGeometry(){this.normals=[];this.indices=[];this.products=[];this.transformations=[];this.styleIndices=[];this.states=[];this.vertices=[];this.matrices=[];this.styles=[];this.meter=1000;this.productMap={};}
xModelGeometry.prototype.parse=function(binReader){var br=binReader;var magicNumber=br.readInt32();if(magicNumber!=94132117)throw'Magic number mismatch.';var version=br.readByte();var numShapes=br.readInt32();var numVertices=br.readInt32();var numTriangles=br.readInt32();var numMatrices=br.readInt32();;var numProducts=br.readInt32();;var numStyles=br.readInt32();;this.meter=br.readFloat32();;var numRegions=br.readInt16();var square=function(arity,count){if(typeof(arity)=='undefined'||typeof(count)=='undefined'){throw'Wrong arguments';}
if(count==0)return 0;var byteLength=count*arity;var imgSide=Math.ceil(Math.sqrt(byteLength/4));while((imgSide*4)%arity!=0){imgSide++}
var result=imgSide*imgSide*4/arity;return result;};this.vertices=new Float32Array(square(4,numVertices*3));this.normals=new Uint8Array(numTriangles*6);this.indices=new Float32Array(numTriangles*3);this.styleIndices=new Uint16Array(numTriangles*3);this.styles=new Uint8Array(square(1,numStyles*4));this.products=new Float32Array(numTriangles*3);this.states=new Uint8Array(numTriangles*3*2);this.transformations=new Float32Array(numTriangles*3);this.matrices=new Float32Array(square(4,numMatrices*16));this.productMap={};this.regions=new Array(numRegions);var iVertex=0;var iIndexForward=0;var iIndexBackward=numTriangles*3;var iTransform=0;var iMatrix=0;var stateEnum=xState;var typeEnum=xProductType;for(var i=0;i<numRegions;i++){this.regions[i]={population:br.readInt32(),centre:br.readFloat32(3),bbox:br.readFloat32(6)}}
var styleMap=[];styleMap.getStyle=function(id){for(var i=0;i<this.length;i++){var item=this[i];if(item.id==id)return item;}
return null;};for(var iStyle=0;iStyle<numStyles;iStyle++){var styleId=br.readInt32();var R=br.readFloat32()*255;var G=br.readFloat32()*255;var B=br.readFloat32()*255;var A=br.readFloat32()*255;this.styles.set([R,G,B,A],iStyle*4);styleMap.push({id:styleId,index:iStyle,transparent:A<254});}
for(var i=0;i<numProducts;i++){var productLabel=br.readInt32();var prodType=br.readInt16();var bBox=br.readFloat32(6);var map={productID:productLabel,type:prodType,bBox:bBox,spans:[]};this.productMap[productLabel]=map;}
for(var iShape=0;iShape<numShapes;iShape++){var repetition=br.readInt32();var shapeList=[];for(var iProduct=0;iProduct<repetition;iProduct++){var prodLabel=br.readInt32();var instanceTypeId=br.readInt16();var instanceLabel=br.readInt32();var styleId=br.readInt32();var transformation=null;if(repetition>1){transformation=br.readMatrix4x4();this.matrices.set(transformation,iMatrix);iMatrix+=16;}
var styleItem=styleMap.getStyle(styleId);if(styleItem===null)
throw'Style index not found.';shapeList.push({pLabel:prodLabel,iLabel:instanceLabel,style:styleItem.index,transparent:styleItem.transparent,transform:transformation!=null?iTransform++:0xFFFF});}
var shapeGeom=new xTriangulatedShape();shapeGeom.parse(br);for(var si in shapeList){var shape=shapeList[si];var iIndex=0;if(shape.transparent){iIndex=iIndexBackward-shapeGeom.indices.length;}
else{iIndex=iIndexForward;}
var begin=iIndex;var map=this.productMap[shape.pLabel];if(typeof(map)==="undefined")throw"Product hasn't been defined before.";this.normals.set(shapeGeom.normals,iIndex*2);var state=map.type==typeEnum.IFCSPACE||map.type==typeEnum.IFCOPENINGELEMENT?stateEnum.HIDDEN:0xFF;for(var i=0;i<shapeGeom.indices.length;i++){this.indices[iIndex]=shapeGeom.indices[i]+iVertex/3;this.products[iIndex]=shape.pLabel;this.styleIndices[iIndex]=shape.style;this.transformations[iIndex]=shape.transform;this.states[2*iIndex]=state;this.states[2*iIndex+1]=0xFF;iIndex++;}
var end=iIndex;map.spans.push(new Int32Array([begin,end]));if(shape.transparent)iIndexBackward-=shapeGeom.indices.length;else iIndexForward+=shapeGeom.indices.length;}
this.vertices.set(shapeGeom.vertices,iVertex);iVertex+=shapeGeom.vertices.length;shapeGeom=null;}
if(!br.getIsEOF()){}};xModelGeometry.prototype.load=function(source){var br=new xBinaryReader();var self=this;br.onloaded=function(){self.parse(br);if(self.onloaded){self.onloaded();}};br.onerror=function(msg){if(self.onerror)self.onerror(msg);};br.load(source);};xModelGeometry.prototype.onloaded=function(){};xModelGeometry.prototype.onerror=function(){};function xModelHandle(gl,model,fpt){if(typeof(gl)=='undefined'||typeof(model)=='undefined'||typeof(fpt)=='undefined'){throw'WebGL context and geometry model must be specified';}
this._gl=gl;this._model=model;this._fpt=fpt;this._id=xModelHandle._instancesNum++;this.count=model.indices.length;this.vertexTexture=gl.createTexture();this.matrixTexture=gl.createTexture();this.styleTexture=gl.createTexture();this.stateStyleTexture=gl.createTexture();this.vertexTextureSize=0;this.matrixTextureSize=0;this.styleTextureSize=0;this.normalBuffer=gl.createBuffer();this.indexBuffer=gl.createBuffer();this.productBuffer=gl.createBuffer();this.styleBuffer=gl.createBuffer();this.stateBuffer=gl.createBuffer();this.transformationBuffer=gl.createBuffer();this.stateStyle=new Uint8Array(15*15*4);this._feedCompleted=false;this.region=model.regions[0];for(var i in model.regions){var region=model.regions[i];if(region.population>this.region.population)this.region=region;}
if(typeof(this.region)=='undefined'){this.region={population:1,centre:[0.0,0.0,0.0],bbox:[0.0,0.0,0.0,10*model.meter,10*model.meter,10*model.meter]}}}
xModelHandle._instancesNum=0;xModelHandle._activeInstance=-1;xModelHandle.prototype.setActive=function(pointers){if(xModelHandle._activeInstance==this._id)return;var gl=this._gl;if(this.vertexTextureSize>0){gl.activeTexture(gl.TEXTURE1);gl.bindTexture(gl.TEXTURE_2D,this.vertexTexture);}
if(this.matrixTextureSize>0){gl.activeTexture(gl.TEXTURE2);gl.bindTexture(gl.TEXTURE_2D,this.matrixTexture);}
if(this.styleTextureSize>0){gl.activeTexture(gl.TEXTURE3);gl.bindTexture(gl.TEXTURE_2D,this.styleTexture);}
gl.activeTexture(gl.TEXTURE4);gl.bindTexture(gl.TEXTURE_2D,this.stateStyleTexture);gl.bindBuffer(gl.ARRAY_BUFFER,this.normalBuffer);gl.vertexAttribPointer(pointers.normalAttrPointer,2,gl.UNSIGNED_BYTE,false,0,0);gl.bindBuffer(gl.ARRAY_BUFFER,this.indexBuffer);gl.vertexAttribPointer(pointers.indexlAttrPointer,1,gl.FLOAT,false,0,0);gl.bindBuffer(gl.ARRAY_BUFFER,this.productBuffer);gl.vertexAttribPointer(pointers.productAttrPointer,1,gl.FLOAT,false,0,0);gl.bindBuffer(gl.ARRAY_BUFFER,this.stateBuffer);gl.vertexAttribPointer(pointers.stateAttrPointer,2,gl.UNSIGNED_BYTE,false,0,0);gl.bindBuffer(gl.ARRAY_BUFFER,this.styleBuffer);gl.vertexAttribPointer(pointers.styleAttrPointer,1,gl.UNSIGNED_SHORT,false,0,0);gl.bindBuffer(gl.ARRAY_BUFFER,this.transformationBuffer);gl.vertexAttribPointer(pointers.transformationAttrPointer,1,gl.FLOAT,false,0,0);gl.uniform1i(pointers.vertexSamplerUniform,1);gl.uniform1i(pointers.matrixSamplerUniform,2);gl.uniform1i(pointers.styleSamplerUniform,3);gl.uniform1i(pointers.stateStyleSamplerUniform,4);gl.uniform1i(pointers.vertexTextureSizeUniform,this.vertexTextureSize);gl.uniform1i(pointers.matrixTextureSizeUniform,this.matrixTextureSize);gl.uniform1i(pointers.styleTextureSizeUniform,this.styleTextureSize);xModelHandle._activeInstance=this._id;};xModelHandle.prototype.draw=function(){var gl=this._gl;gl.drawArrays(gl.TRIANGLES,0,this.count);};xModelHandle.prototype.drawProduct=function(ID){var gl=this._gl;var map=this.getProductMap(ID);if(map!=null){for(var i in map.spans){var span=map.spans[i];gl.drawArrays(gl.TRIANGLES,span[0],span[1]-span[0]);}}};xModelHandle.prototype.getProductMap=function(ID){var map=this._model.productMap[ID];if(typeof(map)!=="undefined")return map;return null;};xModelHandle.prototype.feedGPU=function(){if(this._feedCompleted){throw'GPU can bee fed only once. It discards unnecessary data which cannot be restored again.';}
var gl=this._gl;var model=this._model;this._bufferData(this.normalBuffer,model.normals);this._bufferData(this.indexBuffer,model.indices);this._bufferData(this.productBuffer,model.products);this._bufferData(this.stateBuffer,model.states);this._bufferData(this.transformationBuffer,model.transformations);this._bufferData(this.styleBuffer,model.styleIndices);this.vertexTextureSize=this._bufferTexture(this.vertexTexture,model.vertices,3);this.matrixTextureSize=this._bufferTexture(this.matrixTexture,model.matrices,4);this.styleTextureSize=this._bufferTexture(this.styleTexture,model.styles);this._bufferTexture(this.stateStyleTexture,this.stateStyle);model.normals=null;model.indices=null;model.products=null;model.transformations=null;model.styleIndices=null;model.vertices=null;model.matrices=null;this._feedCompleted=true;};xModelHandle.prototype.refreshStyles=function(){this._bufferTexture(this.stateStyleTexture,this.stateStyle);};xModelHandle.prototype._bufferData=function(pointer,data){var gl=this._gl;gl.bindBuffer(gl.ARRAY_BUFFER,pointer);gl.bufferData(gl.ARRAY_BUFFER,data,gl.STATIC_DRAW);};xModelHandle.prototype._bufferTexture=function(pointer,data,arity){var gl=this._gl;if(data.length==0)return 0;var fp=this._fpt&&data instanceof Float32Array;var size=0;var maxSize=gl.getParameter(gl.MAX_TEXTURE_SIZE);if(fp){size=Math.ceil(Math.sqrt(Math.ceil(data.length/arity)))+1;}
else{var dim=Math.sqrt(data.byteLength/4);size=Math.ceil(dim);}
if(size==0)return 0;if(size>maxSize)throw'Too much data! It cannot fit into the texture.';gl.bindTexture(gl.TEXTURE_2D,pointer);gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL,false);gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL,false);gl.pixelStorei(gl.UNPACK_COLORSPACE_CONVERSION_WEBGL,gl.NONE);if(fp){var image=null;if(size*size*arity!=data.length){image=new Float32Array(size*size*arity);image.set(data);}
else{image=data;}
var type=null;switch(arity){case 1:type=gl.ALPHA;break;case 3:type=gl.RGB;break;case 4:type=gl.RGBA;break;}
gl.texImage2D(gl.TEXTURE_2D,0,type,size,size,0,type,gl.FLOAT,image);}
else{gl.texImage2D(gl.TEXTURE_2D,0,gl.RGBA,size,size,0,gl.RGBA,gl.UNSIGNED_BYTE,new Uint8Array(data.buffer));}
gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MAG_FILTER,gl.NEAREST);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,gl.NEAREST);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_S,gl.CLAMP_TO_EDGE);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_T,gl.CLAMP_TO_EDGE);return size;};xModelHandle.prototype.getState=function(id){if(typeof(id)==="undefined")throw"id must be defined";var map=this.getProductMap(id);if(map===null)return null;var span=map.spans[0];if(typeof(span)=="undefined")return null;return this._model.states[span[0]*2];}
xModelHandle.prototype.getStyle=function(id){if(typeof(id)==="undefined")throw"id must be defined";var map=this.getProductMap(id);if(map===null)return null;var span=map.spans[0];if(typeof(span)=="undefined")return null;return this._model.states[span[0]*2+1];}
xModelHandle.prototype.setState=function(state,args){if(typeof(state)!='number'&&state<0&&state>255)throw'You have to specify state as an ID of state or index in style pallete.';if(typeof(args)=='undefined')throw'You have to specify products as an array of product IDs or as a product type ID';var maps=[];if(typeof(args)=='number'){for(var n in this._model.productMap){var map=this._model.productMap[n];if(map.type==args)maps.push(map);}}
else{for(var l=0;l<args.length;l++){var id=args[l];var map=this.getProductMap(id);if(map!=null)maps.push(map);}}
var shift=state<=225?1:0;for(var i in maps){var map=maps[i];for(var j in map.spans){var span=map.spans[j]
for(var k=span[0];k<span[1];k++){this._model.states[k*2+shift]=state;}}}
this._bufferData(this.stateBuffer,this._model.states);};xModelHandle.prototype.resetStates=function(){for(var i=0;i<this._model.states.length;i+=2){this._model.states[i]=xState.UNDEFINED;}
this._bufferData(this.stateBuffer,this._model.states);};xModelHandle.prototype.resetStyles=function(){for(var i=0;i<this._model.states.length;i+=2){this._model.states[i+1]=xState.UNSTYLED;}
this._bufferData(this.stateBuffer,this._model.states);};var xProductType={IFCDISTRIBUTIONELEMENT:44,IFCDISTRIBUTIONFLOWELEMENT:45,IFCFLOWCONTROLLER:121,IFCELECTRICDISTRIBUTIONPOINT:242,IFCDISTRIBUTIONCONTROLELEMENT:468,IFCDISTRIBUTIONPORT:178,IFCENERGYCONVERSIONDEVICE:175,IFCFLOWFITTING:467,IFCFLOWMOVINGDEVICE:502,IFCFLOWSEGMENT:574,IFCFLOWSTORAGEDEVICE:371,IFCFLOWTERMINAL:46,IFCFLOWTREATMENTDEVICE:425,IFCCHAMFEREDGEFEATURE:765,IFCDISCRETEACCESSORY:423,IFCFASTENER:535,IFCMECHANICALFASTENER:536,IFCROUNDEDEDGEFEATURE:766,IFCSTRUCTURALCURVECONNECTION:534,IFCSTRUCTURALCURVEMEMBER:224,IFCSTRUCTURALCURVEMEMBERVARYING:227,IFCSTRUCTURALLINEARACTION:463,IFCSTRUCTURALLINEARACTIONVARYING:464,IFCSTRUCTURALPLANARACTION:39,IFCSTRUCTURALPLANARACTIONVARYING:357,IFCSTRUCTURALPOINTACTION:356,IFCSTRUCTURALPOINTCONNECTION:533,IFCSTRUCTURALPOINTREACTION:354,IFCSTRUCTURALSURFACECONNECTION:264,IFCSTRUCTURALSURFACEMEMBER:420,IFCSTRUCTURALSURFACEMEMBERVARYING:421,IFCFOOTING:120,IFCPILE:572,IFCREINFORCINGBAR:571,IFCREINFORCINGMESH:531,IFCTENDON:261,IFCTENDONANCHOR:675,IFCSTAIRFLIGHT:25,IFCBUILDINGELEMENTPART:220,IFCANNOTATION:634,IFCBUILDINGSTOREY:459,IFCGRID:564,IFCOPENINGELEMENT:498,IFCPROJECTIONELEMENT:384,IFCBEAM:171,IFCBUILDING:169,IFCBUILDINGELEMENTPROXY:560,IFCCOLUMN:383,IFCCOVERING:382,IFCCURTAINWALL:456,IFCDOOR:213,IFCELECTRICALELEMENT:23,IFCELEMENTASSEMBLY:18,IFCEQUIPMENTELEMENT:212,IFCFURNISHINGELEMENT:253,IFCMEMBER:310,IFCPLATE:351,IFCRAILING:350,IFCSITE:349,IFCSPACE:454,IFCTRANSPORTELEMENT:416,IFCVIRTUALELEMENT:168,IFCRAMP:414,IFCRAMPFLIGHT:348,IFCROOF:347,IFCSLAB:99,IFCSTAIR:346,IFCWALL:452,IFCWALLSTANDARDCASE:453,IFCWINDOW:667,IFCPROXY:447};function xShaders(){var result={};result.fragment_shader=" precision mediump float; uniform vec4 uClippingPlane; varying vec4 vFrontColor; varying vec4 vBackColor; varying vec3 vPosition; varying float vDiscard; void main(void) { if ( vDiscard > 0.001) discard; if (length(uClippingPlane) > 0.001) { vec4 p = uClippingPlane; vec3 x = vPosition; float distance = (dot(p.xyz, x) + p.w) / length(p.xyz); if (distance < 0.0){ discard; } } gl_FragColor = gl_FrontFacing ? vFrontColor : vBackColor; }";result.vertex_shader=" attribute highp float aVertexIndex; attribute highp float aTransformationIndex; attribute highp float aStyleIndex; attribute highp float aProduct; attribute highp vec2 aState; attribute highp vec2 aNormal; uniform mat4 uMVMatrix; uniform mat4 uPMatrix; uniform vec4 ulightA; uniform vec4 ulightB; uniform vec4 uHighlightColour; uniform float uMeter; uniform bool uColorCoding; uniform int uRenderingMode; uniform highp sampler2D uVertexSampler; uniform int uVertexTextureSize; uniform highp sampler2D uMatrixSampler; uniform int uMatrixTextureSize; uniform highp sampler2D uStyleSampler; uniform int uStyleTextureSize; uniform highp sampler2D uStateStyleSampler; varying vec4 vFrontColor; varying vec4 vBackColor; varying vec3 vPosition; varying float vDiscard; vec3 getNormal(){ float U = aNormal[0]; float V = aNormal[1]; float PI = 3.1415926535897932384626433832795; float lon = U / 252.0 * 2.0 * PI; float lat = V / 252.0 * PI; float x = sin(lon) * sin(lat); float z = cos(lon) * sin(lat); float y = cos(lat); return normalize(vec3(x, y, z)); } vec4 getIdColor(){ float product = floor(aProduct + 0.5); float B = floor (product/(256.0*256.0)); float G = floor((product  - B * 256.0*256.0)/256.0); float R = mod(product, 256.0); return vec4(R/255.0, G/255.0, B/255.0, 1.0); } vec2 getTextureCoordinates(int index, int size) { float x = float(index - (index / size) * size); float y = float(index / size); float pixelSize = 1.0 / float(size); return vec2((x + 0.5) * pixelSize, (y + 0.5) * pixelSize); } vec4 getColor(){ if (uRenderingMode == 2){ return vec4(0.0, 0.0, 0.3, 0.5); } int restyle = int(floor(aState[1] + 0.5)); if (restyle > 224){ int index = int (floor(aStyleIndex + 0.5)); vec2 coords = getTextureCoordinates(index, uStyleTextureSize); return texture2D(uStyleSampler, coords); } vec2 coords = getTextureCoordinates(restyle, 15); return texture2D(uStateStyleSampler, coords); } vec3 getVertexPosition(){ int index = int (floor(aVertexIndex +0.5)); vec2 coords = getTextureCoordinates(index, uVertexTextureSize); vec3 point = vec3(texture2D(uVertexSampler, coords)); int tIndex = int(floor(aTransformationIndex + 0.5)); if (tIndex != 65535) { tIndex *=4; mat4 transform = mat4( texture2D(uMatrixSampler, getTextureCoordinates(tIndex, uMatrixTextureSize)), texture2D(uMatrixSampler, getTextureCoordinates(tIndex+1, uMatrixTextureSize)), texture2D(uMatrixSampler, getTextureCoordinates(tIndex+2, uMatrixTextureSize)), texture2D(uMatrixSampler, getTextureCoordinates(tIndex+3, uMatrixTextureSize)) ); return vec3(transform * vec4(point, 1.0)); } return point; } void main(void) { vec3 vertex = getVertexPosition(); vec3 normal = getNormal(); vec3 backNormal = normal * -1.0; int state = int(floor(aState[0] + 0.5)); int restyle = int(floor(aState[1] + 0.5)); if (state == 254 || (uRenderingMode == 1 && !(state == 253 || state == 252)) || (uRenderingMode == 2 && (state == 253 || state == 252))) { vDiscard = 1.0; return; } else { vDiscard = 0.0; } if (uColorCoding){ vec4 idColor = getIdColor(); vFrontColor = idColor; vBackColor = idColor; } else{ float lightAIntensity = ulightA[3]; vec3 lightADirection = normalize(ulightA.xyz - vertex); float lightBIntensity = ulightB[3]; vec3 lightBDirection = normalize(ulightB.xyz - vertex); float lightWeightA = max(dot(normal, lightADirection ) * lightAIntensity, 0.0); float lightWeightB = max(dot(normal, lightBDirection ) * lightBIntensity, 0.0); float backLightWeightA = max(dot(backNormal, lightADirection) * lightAIntensity, 0.0); float backLightWeightB = max(dot(backNormal, lightBDirection) * lightBIntensity, 0.0); float lightWeighting = lightWeightA + lightWeightB + 0.4; float backLightWeighting = backLightWeightA + backLightWeightB + 0.4; vec4 baseColor = state == 253 ? uHighlightColour : getColor(); if (baseColor.a < 0.98 && uRenderingMode == 0) { mat4 transpose = mat4(1); vec3 trans = -0.002 * uMeter * normalize(normal); transpose[3] = vec4(trans,1.0); vertex = vec3(transpose * vec4(vertex, 1.0)); } vFrontColor = vec4(baseColor.rgb * lightWeighting, baseColor.a); vBackColor = vec4(baseColor.rgb * backLightWeighting, baseColor.a); } vPosition = vertex; gl_Position = uPMatrix * uMVMatrix * vec4(vertex, 1.0); }";result.vertex_shader_noFPT=" attribute highp float aVertexIndex; attribute highp float aTransformationIndex; attribute highp float aStyleIndex; attribute highp float aProduct; attribute highp float aState; attribute highp vec2 aNormal; uniform mat4 uMVMatrix; uniform mat4 uPMatrix; uniform vec4 ulightA; uniform vec4 ulightB; uniform bool uColorCoding; uniform bool uFloatingPoint; uniform highp sampler2D uVertexSampler; uniform int uVertexTextureSize; uniform highp sampler2D uMatrixSampler; uniform int uMatrixTextureSize; uniform highp sampler2D uStyleSampler; uniform int uStyleTextureSize; uniform highp sampler2D uStateStyleSampler; int stateStyleTextureSize = 15; varying vec4 vColor; varying vec3 vPosition; vec3 getNormal(){ float U = aNormal[0]; float V = aNormal[1]; float PI = 3.1415926535897932384626433832795; float u = ((U / 252.0) * (2.0 * PI)) - PI; float v = ((V / 252.0) * (2.0 * PI)) - PI; float x = sin(v) * cos(u); float y = sin(v) * sin(u); float z = cos(v); return normalize(vec3(x, y, z)); } vec4 getIdColor(){ float R = mod(aProduct, 256.0) / 255.0; float G = floor(aProduct/256.0) / 255.0; float B = floor (aProduct/(256.0*256.0)) / 255.0; return vec4(R, G, B, 1.0); } vec2 getVertexTextureCoordinates(int index, int size) { float x = float(index - (index / size) * size); float y = float(index / size); float pixelSize = 1.0 / float(size); return vec2((x + 0.5) * pixelSize, (y + 0.5) * pixelSize); } int getByteFromScale(float base) { float result = base * 255.0; int correction = fract(result) >= 0.5 ? 1 : 0; return int(result) + correction; } ivec4 getPixel(int index, sampler2D sampler, int size) { vec2 coords = getVertexTextureCoordinates(index, size); vec4 pixel = texture2D(sampler, coords); return ivec4( getByteFromScale(pixel.r), getByteFromScale(pixel.g), getByteFromScale(pixel.b), getByteFromScale(pixel.a) ); } void getBits(ivec4 pixel, out int result[32]) { for (int i = 0; i < 4; i++) { int actualByte = pixel[i]; for (int j = 0; j < 8; j++) { result[31 - (j + i * 8)] =  actualByte - (actualByte / 2) * 2; actualByte /= 2; } } } float getFloatFromPixel(ivec4 pixel) { int bits[32]; getBits(pixel, bits); float sign =  bits[0] == 0 ? 1.0 : -1.0; highp float fraction = 1.0; highp float exponent = 0.0; for (int i = 1; i < 9; i++) { exponent += float(bits[9 - i]) * exp2(float (i - 1)); } exponent -= 127.0; for (int i = 9; i < 32; i++) { fraction += float(bits[i]) * exp2(float((-1)*(i-8))); } return sign * fraction * exp2(exponent); } float getFloatFromPixel(int index, sampler2D sampler, int size) { ivec4 pixel = getPixel(index, sampler, size); return getFloatFromPixel(pixel); } vec4 getColor(){ if (floor(aState + 0.5) == 0.0){ int index = int (floor(aStyleIndex + 0.5)); vec2 coords = getVertexTextureCoordinates(index, uStyleTextureSize); return texture2D(uStyleSampler, coords); } else{ return vec4(1.0,1.0,1.0,1.0); } } vec3 getVertexPosition(){ int index = int (floor(aVertexIndex +0.5))* 3; vec3 position = vec3( getFloatFromPixel(index, uVertexSampler, uVertexTextureSize), getFloatFromPixel(index + 1, uVertexSampler, uVertexTextureSize), getFloatFromPixel(index + 2, uVertexSampler, uVertexTextureSize) ); int tIndex = int(floor(aTransformationIndex + 0.5)); if (tIndex != 65535) { tIndex *= 16; mat4 transform = mat4( getFloatFromPixel(tIndex + 0, uMatrixSampler, uMatrixTextureSize), getFloatFromPixel(tIndex + 1, uMatrixSampler, uMatrixTextureSize), getFloatFromPixel(tIndex + 2, uMatrixSampler, uMatrixTextureSize), getFloatFromPixel(tIndex + 3, uMatrixSampler, uMatrixTextureSize), getFloatFromPixel(tIndex + 4, uMatrixSampler, uMatrixTextureSize), getFloatFromPixel(tIndex + 5, uMatrixSampler, uMatrixTextureSize), getFloatFromPixel(tIndex + 6, uMatrixSampler, uMatrixTextureSize), getFloatFromPixel(tIndex + 7, uMatrixSampler, uMatrixTextureSize), getFloatFromPixel(tIndex + 8, uMatrixSampler, uMatrixTextureSize), getFloatFromPixel(tIndex + 9, uMatrixSampler, uMatrixTextureSize), getFloatFromPixel(tIndex + 10, uMatrixSampler, uMatrixTextureSize), getFloatFromPixel(tIndex + 11, uMatrixSampler, uMatrixTextureSize), getFloatFromPixel(tIndex + 12, uMatrixSampler, uMatrixTextureSize), getFloatFromPixel(tIndex + 13, uMatrixSampler, uMatrixTextureSize), getFloatFromPixel(tIndex + 14, uMatrixSampler, uMatrixTextureSize), getFloatFromPixel(tIndex + 15, uMatrixSampler, uMatrixTextureSize) ); vec4 transformedPosition = transform * vec4(position, 1.0); return vec3(transformedPosition); } return position; } void main(void) { vec3 vertex = getVertexPosition(); vPosition = vertex; gl_Position = uPMatrix * uMVMatrix * vec4(vertex, 1.0); if (uColorCoding){ vColor = getIdColor(); } else{ vec3 normal = getNormal(); float lightAIntensity = ulightA[3]; vec3 lightADirection = normalize(ulightA.xyz - vPosition); float lightBIntensity = ulightB[3]; vec3 lightBDirection = normalize(ulightB.xyz - vPosition); float lightWeightA = max(dot(normal, lightADirection ) * lightAIntensity, 0.0); float lightWeightB = max(dot(normal, lightBDirection ) * lightBIntensity, 0.0); float lightWeighting = lightWeightA + lightWeightB + 0.4; vec4 baseColor = getColor(); vColor = vec4(baseColor.rgb * lightWeighting, baseColor.a); } }";return result;}
var xState={UNDEFINED:255,HIDDEN:254,HIGHLIGHTED:253,XRAYVISIBLE:252,UNSTYLED:225};function xTriangulatedShape(){};xTriangulatedShape.prototype.parse=function(binReader){var self=this;var version=binReader.readByte();var numVertices=binReader.readInt32();var numOfTriangles=binReader.readInt32();self.vertices=binReader.readFloat32(numVertices*3);self.indices=new Uint32Array(numOfTriangles*3);self.normals=new Uint8Array(numOfTriangles*6);var iIndex=0;if(numVertices===0||numOfTriangles===0)
return;var readIndex;if(numVertices<=0xFF){readIndex=function(count){return binReader.readByte(count);};}
else if(numVertices<=0xFFFF){readIndex=function(count){return binReader.readUint16(count);};}
else{readIndex=function(count){return binReader.readInt32(count);};}
var numFaces=binReader.readInt32();for(var i=0;i<numFaces;i++){var numTrianglesInFace=binReader.readInt32();if(numTrianglesInFace==0)continue;var isPlanar=numTrianglesInFace>0;numTrianglesInFace=Math.abs(numTrianglesInFace);if(isPlanar){var normal=binReader.readByte(2);var planarIndices=readIndex(3*numTrianglesInFace);self.indices.set(planarIndices,iIndex);for(var j=0;j<numTrianglesInFace*3;j++){self.normals[iIndex*2]=normal[0];self.normals[iIndex*2+1]=normal[1];iIndex++;}}
else{for(var j=0;j<numTrianglesInFace;j++){self.indices[iIndex]=readIndex();self.normals.set(binReader.readByte(2),iIndex*2);iIndex++;self.indices[iIndex]=readIndex();self.normals.set(binReader.readByte(2),iIndex*2);iIndex++;self.indices[iIndex]=readIndex();self.normals.set(binReader.readByte(2),iIndex*2);iIndex++;}}}};xTriangulatedShape.prototype.load=function(source){var br=new xBinaryReader();var self=this;br.onloaded=function(){self.parse(br);if(self.onloaded){self.onloaded();}};br.load(source);};xTriangulatedShape.prototype.vertices=[];xTriangulatedShape.prototype.indices=[];xTriangulatedShape.prototype.normals=[];xTriangulatedShape.prototype.onloaded=function(){};function xViewer(canvas){if(typeof(canvas)=='undefined'){throw'Canvas has to be defined';}
this._canvas=null;if(typeof(canvas.nodeName)!='undefined'&&canvas.nodeName=='CANVAS'){this._canvas=canvas;}
if(typeof(canvas)=='string'){this._canvas=document.getElementById(canvas);}
if(this._canvas==null){throw'You have to specify canvas either as an ID of HTML element or the element itself';}
this.perspectiveCamera={fov:95,near:0,far:0};this.orthogonalCamera={left:0,right:0,top:0,bottom:0,near:0,far:0};this.camera='perspective';this.background=[230,230,230,255]
this.highlightingColour=[255,173,33,255]
this.lightA=[0,1000000,200000,0.8];this.lightB=[0,-500000,50000,0.2];this.navigationMode='orbit';this.renderingMode='normal';this._clippingPlane=[0,0,0,0];var gl=WebGLUtils.setupWebGL(this._canvas);if(!gl){return;}
this._gl=gl;this._fpt=(gl.getExtension('OES_texture_float')||gl.getExtension('MOZ_OES_texture_float')||gl.getExtension('WEBKIT_OES_texture_float'));gl.enable(gl.DEPTH_TEST);gl.blendFunc(gl.SRC_ALPHA,gl.ONE_MINUS_SRC_ALPHA);gl.enable(gl.BLEND);this._width=this._canvas.width=this._canvas.offsetWidth;this._height=this._canvas.height=this._canvas.offsetHeight;this._geometryLoaded=false;this._lastStates={};this._visualStateAttributes=["perspectiveCamera","orthogonalCamera","camera","background","lightA","lightB","renderingMode","_clippingPlane","_mvMatrix","_pMatrix","_distance","_origin","highlightingColour"];this._stylingChanged=true;this._events={};this._mvMatrixUniformPointer=null;this._pMatrixUniformPointer=null;this._lightAUniformPointer=null;this._lightBUniformPointer=null;this._colorCodingUniformPointer=null;this._clippingPlaneUniformPointer=null;this._meterUniformPointer=null;this._renderingModeUniformPointer=null;this._highlightingColourUniformPointer=null;this._mvMatrix=mat4.create();this._pMatrix=mat4.create();this._origin=[0,0,0]
this._distance=0;this._shaderProgram=null;this._handles=[];this._stateStyles=new Uint8Array(15*15*4);this._isRunning=true;this._initShaders();this._initAttributesAndUniforms();this._initMouseEvents();};xViewer.check=function(){var result={warnings:[],errors:[],noErrors:false,noWarnings:false};var canvas=document.createElement('canvas');if(!canvas)result.errors.push("Browser doesn't have support for HTMLCanvasElement. This is critical.");else{var gl=WebGLUtils.setupWebGL(canvas);if(gl==null)result.errors.push("Browser doesn't support WebGL. This is critical.");else{var fpt=(gl.getExtension('OES_texture_float')||gl.getExtension('MOZ_OES_texture_float')||gl.getExtension('WEBKIT_OES_texture_float'));if(!fpt)result.warnings.push('Floating point texture extension is not supported. Performance of the viewer will be very bad. But it should work.');var vertTextUnits=gl.getParameter(gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS);if(vertTextUnits<4)result.errors.push("Browser supports only "+vertTextUnits+" vertex texture image units but minimal requirement for the viewer is 4.");}}
if(!window.File||!window.FileReader||!window.Blob)result.errors.push("Browser doesn't support 'File', 'FileReader' or 'Blob' objects.");if(!window.Int32Array||!window.Float32Array)result.errors.push("Browser doesn't support TypedArrays. These are crucial for binary parsing and for comunication with GPU.");if(!document.implementation.hasFeature("http://www.w3.org/TR/SVG11/feature#BasicStructure","1.1"))result.warnings.push("Browser doesn't support SVG. This is used for user interaction like interactive clipping. Functions using SVG shouldn't crash but they won't work as expected.");if(result.errors.length==0)result.noErrors=true;if(result.warnings.length==0)result.noWarnings=true;return result;};xViewer.prototype.defineStyle=function(index,colour){if(typeof(index)=='undefined'||(index<0&&index>224))throw'Style index has to be defined as a number 0-224';if(typeof(colour)=='undefined'||colour.length=='undefined'||colour.length!=4)throw'Colour must be defined as an array of 4 bytes';this._stylingChanged=true;var colData=new Uint8Array(colour);this._stateStyles.set(colData,index*4);for(var i in this._handles){var handle=this._handles[i];handle.stateStyle=this._stateStyles;handle.refreshStyles();}};xViewer.prototype.setState=function(state,target){if(typeof(state)=='undefined'||!(state>=225&&state<=255))throw'State has to be defined as 225 - 255. Use xState enum.';for(var i in this._handles){this._handles[i].setState(state,target);}
this._stylingChanged=true;};xViewer.prototype.getState=function(id){for(var i in this._handles){var state=this._handles[i].getState(id);if(state!==null)return state;}
return null;};xViewer.prototype.resetStates=function(hideSpaces){for(var i in this._handles){this._handles[i].resetStates();}
hideSpaces=typeof(hideSpaces)!='undefined'?hideSpaces:true;if(hideSpaces){for(var i in this._handles){this._handles[i].setState(xState.HIDDEN,xProductType.IFCSPACE);}}
this._stylingChanged=true;};xViewer.prototype.setStyle=function(style,target){if(typeof(style)=='undefined'||!(style>=0&&style<=225))throw'Style has to be defined as 0 - 225 where 225 is for default style.';var c=[this._stateStyles[style*4],this._stateStyles[style*4+1],this._stateStyles[style*4+2],this._stateStyles[style*4+3]];if(c[0]==0&&c[1]==0&&c[2]==0&&c[3]==0&&console&&console.warn)
console.warn('You have used undefined colour for restyling. Elements with this style will have transparent black colour and hence will be invisible.');for(var i in this._handles){this._handles[i].setState(style,target);}
this._stylingChanged=true;};xViewer.prototype.getStyle=function(id){for(var i in this._handles){var style=this._handles[i].getStyle(id);if(style!==null)return style;}
return null;};xViewer.prototype.resetStyles=function(){for(var i in this._handles){this._handles[i].resetStyles();}
this._stylingChanged=true;};xViewer.prototype.getProductType=function(prodId){for(var i in this._handles){var map=this._handles[i]._model.productMap;var prod=map.filter(function(e){return e.productID==prodId}).pop();if(prod)return prod.type;else return null;}};xViewer.prototype.setCameraPosition=function(coordinates){if(typeof(coordinates)=='undefined')throw'Parameter coordinates must be defined';mat4.lookAt(this._mvMatrix,coordinates,this._origin,[0,0,1]);}
xViewer.prototype.setCameraTarget=function(prodId){var viewer=this;var setDistance=function(bBox){var size=Math.max(bBox[3],bBox[4],bBox[5]);var ratio=Math.max(viewer._width,viewer._height)/Math.min(viewer._width,viewer._height);viewer._distance=size/Math.tan(viewer.perspectiveCamera.fov*Math.PI/360.0)*ratio*1.2;}
if(typeof(prodId)!='undefined'&&prodId!=null){var bbox=null;for(var i in this._handles){var map=this._handles[i].getProductMap(prodId);if(map){bbox=map.bBox;break;}}
if(bbox){this._origin=[bbox[0]+bbox[3]/2.0,bbox[1]+bbox[4]/2.0,bbox[2]+bbox[5]/2.0];setDistance(bbox);return true;}
else
return false;}
else{var handle=this._handles[0];if(handle){var region=handle.region
if(region){this._origin=[region.centre[0],region.centre[1],region.centre[2]]
setDistance(region.bbox);}}
return true;}};xViewer.prototype.set=function(settings){for(key in settings){this[key]=settings[key];}};xViewer.prototype.load=function(model){if(typeof(model)=='undefined')throw'You have to speficy model to load.';if(typeof(model)!='string'&&!(model instanceof Blob)&&!(model instanceof File))
throw'Model has to be specified either as a URL to wexBIM file or Blob object representing the wexBIM file.';var gl=this._gl;var viewer=this;var geometry=new xModelGeometry();geometry.onloaded=function(){var handle=new xModelHandle(viewer._gl,geometry,viewer._fpt!=null);viewer._handles.push(handle);handle.stateStyle=viewer._stateStyles;handle.feedGPU();var meter=handle._model.meter;gl.uniform1f(viewer._meterUniformPointer,meter);viewer.setCameraTarget();var region=handle.region;var maxSize=Math.max(region.bbox[3],region.bbox[4],region.bbox[5]);viewer.perspectiveCamera.far=maxSize*50;viewer.perspectiveCamera.near=meter/10.0;viewer.orthogonalCamera.far=viewer.perspectiveCamera.far;viewer.orthogonalCamera.near=viewer.perspectiveCamera.near;var ratio=1.8;viewer.orthogonalCamera.top=maxSize/ratio;viewer.orthogonalCamera.bottom=maxSize/ratio*-1;viewer.orthogonalCamera.left=maxSize/ratio*-1*viewer._width/viewer._height;viewer.orthogonalCamera.right=maxSize/ratio*viewer._width/viewer._height;viewer.setCameraTarget();var dist=Math.sqrt(viewer._distance*viewer._distance/3.0);viewer.setCameraPosition([region.centre[0]+dist*-1.0,region.centre[1]+dist*-1.0,region.centre[2]+dist]);viewer._fire('loaded',{})
viewer._geometryLoaded=true;};geometry.onerror=function(msg){viewer._error(msg);}
geometry.load(model);};xViewer.prototype._initShaders=function(){var gl=this._gl;var shaders=new xShaders();var viewer=this;var compile=function(shader,code){gl.shaderSource(shader,code);gl.compileShader(shader);if(!gl.getShaderParameter(shader,gl.COMPILE_STATUS)){viewer._error(gl.getShaderInfoLog(shader));return null;}}
var fragmentShader=gl.createShader(gl.FRAGMENT_SHADER);compile(fragmentShader,shaders.fragment_shader);var vertexShader=gl.createShader(gl.VERTEX_SHADER);if(this._fpt!=null)compile(vertexShader,shaders.vertex_shader);else compile(vertexShader,shaders.shaders.vertex_shader_noFPT);this._shaderProgram=gl.createProgram();gl.attachShader(this._shaderProgram,vertexShader);gl.attachShader(this._shaderProgram,fragmentShader);gl.linkProgram(this._shaderProgram);if(!gl.getProgramParameter(this._shaderProgram,gl.LINK_STATUS)){this._error('Could not initialise shaders ');}
gl.useProgram(this._shaderProgram);};xViewer.prototype._initAttributesAndUniforms=function(){var gl=this._gl;this._pMatrixUniformPointer=gl.getUniformLocation(this._shaderProgram,"uPMatrix");this._mvMatrixUniformPointer=gl.getUniformLocation(this._shaderProgram,"uMVMatrix");this._lightAUniformPointer=gl.getUniformLocation(this._shaderProgram,"ulightA");this._lightBUniformPointer=gl.getUniformLocation(this._shaderProgram,"ulightB");this._colorCodingUniformPointer=gl.getUniformLocation(this._shaderProgram,"uColorCoding");this._clippingPlaneUniformPointer=gl.getUniformLocation(this._shaderProgram,"uClippingPlane");this._meterUniformPointer=gl.getUniformLocation(this._shaderProgram,"uMeter");this._renderingModeUniformPointer=gl.getUniformLocation(this._shaderProgram,"uRenderingMode");this._highlightingColourUniformPointer=gl.getUniformLocation(this._shaderProgram,"uHighlightColour");this._pointers={normalAttrPointer:gl.getAttribLocation(this._shaderProgram,"aNormal"),indexlAttrPointer:gl.getAttribLocation(this._shaderProgram,"aVertexIndex"),productAttrPointer:gl.getAttribLocation(this._shaderProgram,"aProduct"),stateAttrPointer:gl.getAttribLocation(this._shaderProgram,"aState"),styleAttrPointer:gl.getAttribLocation(this._shaderProgram,"aStyleIndex"),transformationAttrPointer:gl.getAttribLocation(this._shaderProgram,"aTransformationIndex"),vertexSamplerUniform:gl.getUniformLocation(this._shaderProgram,"uVertexSampler"),matrixSamplerUniform:gl.getUniformLocation(this._shaderProgram,"uMatrixSampler"),styleSamplerUniform:gl.getUniformLocation(this._shaderProgram,"uStyleSampler"),stateStyleSamplerUniform:gl.getUniformLocation(this._shaderProgram,"uStateStyleSampler"),vertexTextureSizeUniform:gl.getUniformLocation(this._shaderProgram,"uVertexTextureSize"),matrixTextureSizeUniform:gl.getUniformLocation(this._shaderProgram,"uMatrixTextureSize"),styleTextureSizeUniform:gl.getUniformLocation(this._shaderProgram,"uStyleTextureSize")};gl.enableVertexAttribArray(this._pointers.normalAttrPointer);gl.enableVertexAttribArray(this._pointers.indexlAttrPointer);gl.enableVertexAttribArray(this._pointers.productAttrPointer);gl.enableVertexAttribArray(this._pointers.stateAttrPointer);gl.enableVertexAttribArray(this._pointers.styleAttrPointer);gl.enableVertexAttribArray(this._pointers.transformationAttrPointer);};xViewer.prototype._initMouseEvents=function(){var viewer=this;var mouseDown=false;var lastMouseX=null;var lastMouseY=null;var startX=null;var startY=null;var button='L';var id=-1;function handleMouseDown(event){mouseDown=true;lastMouseX=event.clientX;lastMouseY=event.clientY;startX=event.clientX;startY=event.clientY;var r=viewer._canvas.getBoundingClientRect();var viewX=startX-r.left;var viewY=viewer._height-(startY-r.top);id=viewer._getID(viewX,viewY);viewer._fire('mouseDown',{id:id});switch(event.button){case 0:button='left';break;case 1:button='middle';break;case 2:button='right';break;default:button='left';break;}
viewer._disableTextSelection();}
function handleMouseUp(event){mouseDown=false;var endX=event.clientX;var endY=event.clientY;var deltaX=Math.abs(endX-startX);var deltaY=Math.abs(endY-startY);if(deltaX<3&&deltaY<3&&button=='left'){viewer._fire('pick',{id:id});}
viewer._enableTextSelection();}
function handleMouseMove(event){if(!mouseDown){return;}
if(viewer.navigationMode=='none'){return;}
var newX=event.clientX;var newY=event.clientY;var deltaX=newX-lastMouseX;var deltaY=newY-lastMouseY;lastMouseX=newX;lastMouseY=newY;if(button=='left'){switch(viewer.navigationMode){case'free-orbit':navigate('free-orbit',deltaX,deltaY);break;case'fixed-orbit':case'orbit':navigate('orbit',deltaX,deltaY);break;case'pan':navigate('pan',deltaX,deltaY);break;case'zoom':navigate('zoom',deltaX,deltaY);break;default:break;}}
if(button=='middle'){navigate('pan',deltaX,deltaY);}}
function handleMouseScroll(event){if(viewer.navigationMode=='none'){return;}
if(event.stopPropagation){event.stopPropagation();event.cancelBubble=true;}
function sign(x){x=+x
if(x===0||isNaN(x))
return x
return x>0?1:-1}
navigate('zoom',sign(event.deltaX)*-1.0,sign(event.deltaY)*-1.0);}
function navigate(type,deltaX,deltaY){var origin=viewer._origin;var camera=viewer.getCameraPosition();var mvOrigin=vec3.transformMat4(vec3.create(),origin,viewer._mvMatrix)
var distanceVec=vec3.subtract(vec3.create(),origin,camera);var distance=Math.max(vec3.length(distanceVec),viewer._handles[0]._model.meter);var transform=mat4.translate(mat4.create(),mat4.create(),mvOrigin)
function degToRad(deg){return deg*Math.PI/180.0;}
switch(type){case'free-orbit':transform=mat4.rotate(mat4.create(),transform,degToRad(deltaY/4),[1,0,0]);transform=mat4.rotate(mat4.create(),transform,degToRad(deltaX/4),[0,1,0]);break;case'fixed-orbit':case'orbit':mat4.rotate(transform,transform,degToRad(deltaY/4),[1,0,0]);var mvZ=vec3.transformMat3(vec3.create(),[0,0,1],mat3.fromMat4(mat3.create(),viewer._mvMatrix));mvZ=vec3.normalize(vec3.create(),mvZ);transform=mat4.rotate(mat4.create(),transform,degToRad(deltaX/4),mvZ);break;case'pan':mat4.translate(transform,transform,[deltaX*distance/150,0,0]);mat4.translate(transform,transform,[0,(-1.0*deltaY)*distance/150,0]);break;case'zoom':mat4.translate(transform,transform,[0,0,deltaX*distance/20]);mat4.translate(transform,transform,[0,0,deltaY*distance/20]);break;default:break;}
var translation=vec3.negate(vec3.create(),mvOrigin);transform=mat4.translate(mat4.create(),transform,translation);viewer._mvMatrix=mat4.multiply(mat4.create(),transform,viewer._mvMatrix);}
var elementHeight=viewer.height;var elementWidth=viewer.width;setInterval(function(){if(viewer._canvas.offsetHeight!==elementHeight||viewer._canvas.offsetWidth!==elementWidth){elementHeight=viewer._height=viewer._canvas.height=viewer._canvas.offsetHeight;elementWidth=viewer._width=viewer._canvas.width=viewer._canvas.offsetWidth;}},500);this._canvas.addEventListener('mousedown',handleMouseDown,true);this._canvas.addEventListener('wheel',handleMouseScroll,true);window.addEventListener('mouseup',handleMouseUp,true);window.addEventListener('mousemove',handleMouseMove,true);this._canvas.addEventListener('dblclick',function(){viewer._fire('dblclick',{id:id});},true);};xViewer.prototype.draw=function(){if(!this._geometryLoaded||this._handles.length==0||!(this._stylingChanged||this._isChanged())){return;}
this._stylingChanged=false;var gl=this._gl;var width=this._width;var height=this._height;gl.viewport(0,0,width,height);gl.clearColor(this.background[0]/255,this.background[1]/255,this.background[2]/255,this.background[3]/255);gl.clear(gl.COLOR_BUFFER_BIT|gl.DEPTH_BUFFER_BIT);switch(this.camera){case'perspective':mat4.perspective(this._pMatrix,this.perspectiveCamera.fov,this._width/this._height,this.perspectiveCamera.near,this.perspectiveCamera.far);break;case'orthogonal':mat4.ortho(this._pMatrix,this.orthogonalCamera.left,this.orthogonalCamera.right,this.orthogonalCamera.bottom,this.orthogonalCamera.top,this.orthogonalCamera.near,this.orthogonalCamera.far);break;default:mat4.perspective(this._pMatrix,this.perspectiveCamera.fov,this._width/this._height,this.perspectiveCamera.near,this.perspectiveCamera.far);break;}
gl.uniformMatrix4fv(this._pMatrixUniformPointer,false,this._pMatrix);gl.uniformMatrix4fv(this._mvMatrixUniformPointer,false,this._mvMatrix);gl.uniform4fv(this._lightAUniformPointer,new Float32Array(this.lightA));gl.uniform4fv(this._lightBUniformPointer,new Float32Array(this.lightB));gl.uniform4fv(this._clippingPlaneUniformPointer,new Float32Array(this._clippingPlane));gl.uniform1i(this._colorCodingUniformPointer,0);gl.uniform4fv(this._highlightingColourUniformPointer,new Float32Array([this.highlightingColour[0]/255.0,this.highlightingColour[1]/255.0,this.highlightingColour[2]/255.0,this.highlightingColour[3]/255.0]));if(this.renderingMode=='x-ray')
{gl.uniform1i(this._renderingModeUniformPointer,1);gl.disable(gl.CULL_FACE);for(var i in this._handles){var handle=this._handles[i];handle.setActive(this._pointers);handle.draw();}
gl.uniform1i(this._renderingModeUniformPointer,2);gl.enable(gl.CULL_FACE);for(var i in this._handles){var handle=this._handles[i];handle.setActive(this._pointers);handle.draw();}
gl.uniform1i(this._renderingModeUniformPointer,0);}
else{gl.uniform1i(this._renderingModeUniformPointer,0);gl.disable(gl.CULL_FACE);for(var i in this._handles){var handle=this._handles[i];handle.setActive(this._pointers);handle.draw();}}
this._fire('frame',{});};xViewer.prototype._isChanged=function(){var theSame=true;for(var i in this._visualStateAttributes){var state=JSON.stringify(this[this._visualStateAttributes[i]]);var lastState=this._lastStates[this._visualStateAttributes[i]];this._lastStates[this._visualStateAttributes[i]]=state;theSame=theSame&&(state===lastState)}
return!theSame;};xViewer.prototype.getCameraPosition=function(){var transform=mat4.create();mat4.multiply(transform,this._pMatrix,this._mvMatrix);var inv=mat4.create()
mat4.invert(inv,transform);var eye=vec3.create();vec3.transformMat4(eye,vec3.create(),inv);return eye;}
xViewer.prototype.zoomTo=function(id){var found=this.setCameraTarget(id);if(!found)return false;var eye=this.getCameraPosition();var dir=vec3.create();vec3.subtract(dir,eye,this._origin);dir=vec3.normalize(vec3.create(),dir);var translation=vec3.create();vec3.scale(translation,dir,this._distance);vec3.add(eye,translation,this._origin);mat4.lookAt(this._mvMatrix,eye,this._origin,[0,0,1])
return true;};xViewer.prototype.show=function(type){var origin=this._origin;var distance=this._distance;var camera=[0,0,0];var heading=[0,0,1];switch(type){case'top':mat4.translate(this._mvMatrix,mat4.create(),[origin[0]*-1.0,origin[1]*-1.0,distance*-1.0]);return;case'bottom':var translate=mat4.create();mat4.translate(translate,mat4.create(),[origin[0]*-1.0,origin[1]*-1.0,distance*-1.0]);mat4.rotateY(this._mvMatrix,translate,Math.PI);return;case'front':camera=[origin[0],origin[1]-distance,origin[2]];break;case'back':camera=[origin[0],origin[1]+distance,origin[2]];break;case'left':camera=[origin[0]-distance,origin[1],origin[2]];break;case'right':camera=[origin[0]+distance,origin[1],origin[2]];break;default:break;}
mat4.lookAt(this._mvMatrix,camera,origin,heading);};xViewer.prototype._error=function(msg){this._fire('error',{message:msg});};xViewer.prototype._getID=function(x,y){var factor=2;var gl=this._gl;var width=this._width/factor;var height=this._height/factor;x=x/factor;y=y/factor;var frameBuffer=gl.createFramebuffer();gl.bindFramebuffer(gl.FRAMEBUFFER,frameBuffer);var renderBuffer=gl.createRenderbuffer();gl.bindRenderbuffer(gl.RENDERBUFFER,renderBuffer);gl.renderbufferStorage(gl.RENDERBUFFER,gl.DEPTH_COMPONENT16,width,height);var texture=gl.createTexture();gl.activeTexture(gl.TEXTURE0);gl.bindTexture(gl.TEXTURE_2D,texture);gl.texImage2D(gl.TEXTURE_2D,0,gl.RGBA,width,height,0,gl.RGBA,gl.UNSIGNED_BYTE,null);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_S,gl.CLAMP_TO_EDGE);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_T,gl.CLAMP_TO_EDGE);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,gl.NEAREST);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MAG_FILTER,gl.NEAREST);gl.framebufferRenderbuffer(gl.FRAMEBUFFER,gl.DEPTH_ATTACHMENT,gl.RENDERBUFFER,renderBuffer);gl.framebufferTexture2D(gl.FRAMEBUFFER,gl.COLOR_ATTACHMENT0,gl.TEXTURE_2D,texture,0);if(gl.checkFramebufferStatus(gl.FRAMEBUFFER)!=gl.FRAMEBUFFER_COMPLETE){this._error("this combination of attachments does not work");return null;}
gl.bindFramebuffer(gl.FRAMEBUFFER,frameBuffer);gl.viewport(0,0,width,height);gl.enable(gl.DEPTH_TEST);gl.disable(gl.BLEND);gl.clearColor(0,0,0,0);gl.clear(gl.COLOR_BUFFER_BIT|gl.DEPTH_BUFFER_BIT);gl.uniform1i(this._colorCodingUniformPointer,1);for(var i in this._handles){var handle=this._handles[i];handle.setActive(this._pointers);handle.draw();}
var result=new Uint8Array(4);gl.readPixels(x,y,1,1,gl.RGBA,gl.UNSIGNED_BYTE,result);gl.bindFramebuffer(gl.FRAMEBUFFER,null);gl.deleteTexture(texture);gl.deleteRenderbuffer(renderBuffer);gl.deleteFramebuffer(frameBuffer);gl.blendFunc(gl.SRC_ALPHA,gl.ONE_MINUS_SRC_ALPHA);gl.enable(gl.BLEND);var hasValue=result[3]!=0;if(hasValue){return result[0]+result[1]*256+result[2]*256*256}
else{return null;}};xViewer.prototype.start=function(){this._isRunning=true;var viewer=this;var lastTime=new Date();var counter=0;function tick(){counter++;if(counter==30){counter=0;var newTime=new Date();var span=newTime.getTime()-lastTime.getTime();lastTime=newTime;var fps=1000/span*30;viewer._fire('fps',Math.floor(fps));}
if(viewer._isRunning){window.requestAnimFrame(tick)
viewer.draw()}}
tick();};xViewer.prototype.stop=function(){this._isRunning=false;};xViewer.prototype.on=function(eventName,callback){var events=this._events;if(!events[eventName]){events[eventName]=[];}
events[eventName].push(callback);};xViewer.prototype.onRemove=function(eventName,callback){var events=this._events;var callbacks=events[eventName];if(!callbacks){return;}
var index=callbacks.indexOf(callback)
if(index>=0){callbacks.splice(index,1);}};xViewer.prototype._fire=function(eventName,args){var handlers=this._events[eventName];if(!handlers){return;}
for(var i in handlers){handlers[i](args);}};xViewer.prototype._disableTextSelection=function(){document.documentElement.style['-webkit-touch-callout']='none';document.documentElement.style['-webkit-user-select']='none';document.documentElement.style['-khtml-user-select']='none';document.documentElement.style['-moz-user-select']='none';document.documentElement.style['-ms-user-select']='none';document.documentElement.style['user-select']='none';};xViewer.prototype._enableTextSelection=function(){document.documentElement.style['-webkit-touch-callout']='text';document.documentElement.style['-webkit-user-select']='text';document.documentElement.style['-khtml-user-select']='text';document.documentElement.style['-moz-user-select']='text';document.documentElement.style['-ms-user-select']='text';document.documentElement.style['user-select']='text';};xViewer.prototype._getSVGOverlay=function(){if(!document.implementation.hasFeature("http://www.w3.org/TR/SVG11/feature#BasicStructure","1.1"))return false;var ns="http://www.w3.org/2000/svg";function getOffsetRect(elem){var box=elem.getBoundingClientRect()
var body=document.body
var docElem=document.documentElement
var scrollTop=window.pageYOffset||docElem.scrollTop||body.scrollTop
var scrollLeft=window.pageXOffset||docElem.scrollLeft||body.scrollLeft
var clientTop=docElem.clientTop||body.clientTop||0
var clientLeft=docElem.clientLeft||body.clientLeft||0
var top=box.top+scrollTop-clientTop
var left=box.left+scrollLeft-clientLeft
return{top:Math.round(top),left:Math.round(left)}}
var svg=document.createElementNS(ns,"svg");var cRect=getOffsetRect(this._canvas);svg.style.position='absolute';svg.style.top=cRect.top+'px';svg.style.left=cRect.left+'px';svg.style['z-index']=100;svg.setAttribute('width',this._width);svg.setAttribute('height',this._height);return svg;}
xViewer.prototype.clip=function(point,normal){if(typeof(point)!='undefined'&&typeof(normal)!='undefined')
{var d=0.0-normal[0]*point[0]-normal[1]*point[1]-normal[2]*point[2];this._clippingPlane=[normal[0],normal[1],normal[2],d]
this._fire('clipped',{});return;}
var ns="http://www.w3.org/2000/svg";var svg=this._getSVGOverlay();var viewer=this;var position={};var down=false;var g={};var handleMouseDown=function(event){if(down)return;down=true;viewer._disableTextSelection();var r=svg.getBoundingClientRect();position.x=event.clientX-r.left;position.y=event.clientY-r.top;g=document.createElementNS(ns,"g");g.setAttribute('id','section');svg.appendChild(g);var line=document.createElementNS(ns,"line");g.appendChild(line);line.setAttribute('style',"stroke:rgb(255,0,0);stroke-width:2");line.setAttribute('x1',position.x);line.setAttribute('y1',99999);line.setAttribute('x2',position.x);line.setAttribute('y2',-99999);};var handleMouseUp=function(event){if(!down)return;var r=svg.getBoundingClientRect();if(position.x==event.clientX-r.left&&position.y==event.clientY-r.top){return;}
down=false;viewer._enableTextSelection();var transform=mat4.create();mat4.multiply(transform,viewer._pMatrix,viewer._mvMatrix);var inverse=mat4.create();mat4.invert(inverse,transform);var origin=vec3.create();vec3.transformMat4(origin,viewer._origin,transform);var x1=position.x/(viewer._width/2.0)-1.0;var y1=1.0-position.y/(viewer._height/2.0);var z1=origin[2];var x2=(event.clientX-r.left)/(viewer._width/2.0)-1.0;var y2=1.0-(event.clientY-r.top)/(viewer._height/2.0);var z2=origin[2];var X=vec3.create();var Y=vec3.create();vec3.transformMat4(X,[x1,y1,z1],inverse);vec3.transformMat4(Y,[x2,y2,z2],inverse);var normal=vec3.create();vec3.subtract(normal,X,Y);viewer.clip(X,normal);svg.parentNode.removeChild(svg);svg.removeEventListener('mousedown',handleMouseDown,true);window.removeEventListener('mouseup',handleMouseUp,true);window.removeEventListener('mousemove',handleMouseMove,true);};var handleMouseMove=function(event){if(!down)return;var r=svg.getBoundingClientRect();var x=event.clientX-r.left;var y=event.clientY-r.top;var dX=x-position.x;var dY=y-position.y;var angle=Math.atan2(dX,dY)*-180.0/Math.PI+90.0;g.setAttribute('transform','rotate('+angle+' '+position.x+' '+position.y+')');}
document.documentElement.appendChild(svg)
svg.addEventListener('mousedown',handleMouseDown,true);window.addEventListener('mouseup',handleMouseUp,true);window.addEventListener('mousemove',handleMouseMove,true);};xViewer.prototype.unclip=function(){this._clippingPlane=[0,0,0,0];this._fire('unclipped',{});};